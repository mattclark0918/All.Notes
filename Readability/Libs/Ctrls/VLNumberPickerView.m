
#import "VLNumberPickerView.h"
#import "../Common/Classes.h"
#import "../Drawing/Classes.h"
#import "../System/Classes.h"
#import "VLCtrlsCommon.h"

#define kBorderRatio 0.1
#define kFontSize iUiChoice(22.0, 28.0)

@interface VLNumberPickerView()
- (int)getValueFromView;
@end

@implementation VLNumberPickerView

@dynamic minValue;
@dynamic maxValue;
@dynamic value;
@synthesize step = _step;

- (void)updateView
{
	NSString *sNum = [[NSNumber numberWithInt:_value] stringValue];
	if(_label)
		_label.text = sNum;
	if(_tfValue)
		_tfValue.text = sNum;
}

- (void)initialize
{
	_step = 1;
	_maxValue = 100;
	self.backgroundColor = [UIColor clearColor];
	
	_bnMinus = [UIButton buttonWithType:UIButtonTypeCustom];
	_bnMinus.backgroundColor = [UIColor clearColor];
	[_bnMinus addTarget:self action:@selector(onBnMinusTapped:) forControlEvents:UIControlEventTouchUpInside];
	[_bnMinus setImage:[VLNumberPickerView imageMinus64] forState:UIControlStateNormal];
	[self addSubview:_bnMinus];
	
	_bnPlus = [UIButton buttonWithType:UIButtonTypeCustom];
	_bnPlus.backgroundColor = [UIColor clearColor];
	[_bnPlus addTarget:self action:@selector(onBnPlusTapped:) forControlEvents:UIControlEventTouchUpInside];
	[_bnPlus setImage:[VLNumberPickerView imagePlus64] forState:UIControlStateNormal];
	[self addSubview:_bnPlus];
	
	if(_style == EVLNumberPickerViewStyleTextField)
	{
		_tfValue = [[UITextField alloc] init];
		_tfValue.borderStyle = UITextBorderStyleNone;
		_tfValue.textAlignment = NSTextAlignmentCenter;
		_tfValue.font = [UIFont systemFontOfSize:kFontSize];
		_tfValue.keyboardType = UIKeyboardTypeNumbersAndPunctuation;
		_tfValue.returnKeyType = UIReturnKeyDone;
		_tfValue.delegate = self;
		[self addSubview:_tfValue];
	}
	else
	{
		_label = [UILabel new];
		_label.backgroundColor = [UIColor clearColor];
		_label.textAlignment = NSTextAlignmentCenter;
		_label.baselineAdjustment = UIBaselineAdjustmentAlignCenters;
		_label.numberOfLines = 1;
		_label.adjustsFontSizeToFitWidth = YES;
		_label.font = [UIFont systemFontOfSize:kFontSize];
		_label.contentMode = UIViewContentModeRedraw;
		[self addSubview:_label];
	}
	
	[self updateView];
}

- (id)initWithStyle:(EVLNumberPickerViewStyle)style
{
	_style = style;
	self = [super init];
	if(self)
	{
		[self initialize];
	}
	return self;
}
- (id)initWithFrame:(CGRect)aRect
{
	self = [super initWithFrame:aRect];
	if(self)
	{
		[self initialize];
	}
	return self;
}
- (id)init
{
	self = [super init];
	if(self)
	{
		[self initialize];
	}
	return self;
}
- (id)initWithCoder:(NSCoder *)coder
{
	if (self = [super initWithCoder:coder])
	{
		[self initialize];
	}
	return self;
}

- (int)minValue { return _minValue; }
- (void)setMinValue:(int)val
{
	if(_minValue != val)
	{
		_minValue = val;
		[self updateView];
	}
}

- (int)maxValue { return _maxValue; }
- (void)setMaxValue:(int)val
{
	if(_maxValue != val)
	{
		_maxValue = val;
		[self updateView];
	}
}

- (void)setValue:(int)val byUser:(BOOL)byUser
{
	if(_value != val)
	{
		_value = val;
		[self updateView];
	}
}

- (int)value
{
	[self getValueFromView];
	return _value;
}
- (void)setValue:(int)val
{
	[self setValue:val byUser:NO];
}

- (void)drawRect:(CGRect)rect
{
	[super drawRect:rect];
	CGRect rcView = self.bounds;
	CGRect rcBack = CGRectInset(rcView, 1, 1);
	CGContextRef ctx = UIGraphicsGetCurrentContext();
	
	[VLGraphicsUtils context:ctx
			 drawRoundedRect:rcBack
			withCornerRadius:MIN(rcBack.size.width, rcBack.size.height)/2
				   lineWidth:2
				   lineColor:[UIColor grayColor]
				   fillColor:[UIColor whiteColor]];
}

- (void)layoutSubviews
{
	[super layoutSubviews];
	CGRect rcView = self.bounds;
	float border = MIN(rcView.size.width, rcView.size.height)*kBorderRatio;
	CGRect rcCtrls = CGRectInset(rcView, border, border);
	CGRect rcMinus = rcCtrls;
	CGRect rcLabel = rcCtrls;
	CGRect rcPlus = rcCtrls;
	rcMinus.size.width = MIN(rcMinus.size.height, rcCtrls.size.width/3);
	rcPlus.size.width = MIN(rcPlus.size.height, rcCtrls.size.width/3);
	rcPlus.origin.x = CGRectGetMaxX(rcCtrls) - rcPlus.size.width;
	rcLabel.origin.x = CGRectGetMaxX(rcMinus);
	rcLabel.size.width = rcPlus.origin.x - rcLabel.origin.x;
	_bnMinus.frame = rcMinus;
	if(_label)
		_label.frame = rcLabel;
	if(_tfValue)
		_tfValue.frame = rcLabel;
	_bnPlus.frame = rcPlus;
}

- (int)getValueFromView
{
	if(_tfValue)
	{
		NSString *sNum = _tfValue.text;
		int val = [sNum intValue];
		if(val > _maxValue)
			val = _maxValue;
		if(val < _minValue)
			val = _minValue;
		_value = val;
		_tfValue.text = [[NSNumber numberWithInt:_value] stringValue];
	}
	return _value;
}

- (void)textFieldDidEndEditing:(UITextField *)textField
{
	[self getValueFromView];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
	[textField resignFirstResponder];
	return NO;
}

- (void)onBnMinusTapped:(id)sender
{
	_value = [self getValueFromView];
	int newVal = _value - _step;
	if(newVal < _minValue)
		newVal = _minValue;
	[self setValue:newVal byUser:YES];
}

- (void)onBnPlusTapped:(id)sender
{
	_value = [self getValueFromView];
	int newVal = _value + _step;
	if(newVal > _maxValue)
		newVal = _maxValue;
	[self setValue:newVal byUser:YES];
}


+ (UIImage*)imagePlus64
{
	static UIImage *_imagePlus64 = nil;
	if(!_imagePlus64)
	{
		NSData *data = [NSData dataWithBase64String:@""];
		_imagePlus64 = [UIImage imageWithData:data];
	}
	return _imagePlus64;
}

+ (UIImage*)imageMinus64
{
	static UIImage *_imageMinus64 = nil;
	if(!_imageMinus64)
	{
		NSData *data = [NSData dataWithBase64String:@"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"];
		_imageMinus64 = [UIImage imageWithData:data];
	}
	return _imageMinus64;
}

@end

