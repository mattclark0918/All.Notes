
#import "VLCheckboxView.h"
#import "../Drawing/Classes.h"

@implementation VLCheckboxView

@synthesize msgrCheckedChanged = _msgrCheckedChanged;

@synthesize checked = _checked;

- (void)initialize
{
	[super initialize];
	self.backgroundColor = [UIColor clearColor];
	_msgrCheckedChanged = [VLMessenger new];
	_msgrCheckedChanged.owner = self;
}

- (UIImage*)imageUnchecked
{
	static UIImage *_image = nil;
	if(!_image)
	{
		NSData *data = [NSData dataWithBase64String:@"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"];
		_image = [UIImage imageWithData:data];
	}
	return _image;
}

- (UIImage*)imageChecked
{
	static UIImage *_image = nil;
	if(!_image)
	{
		NSData *data = [NSData dataWithBase64String:@""];
		_image = [UIImage imageWithData:data];
	}
	return _image;
}

- (void)setChecked:(BOOL)checked
{
	if(_checked != checked)
	{
		_checked = checked;
		[self setNeedsDisplay];
	}
}

- (void)drawRect:(CGRect)rect
{
	CGRect rcBnds = self.bounds;
	CGRect rcCheck = rcBnds;
	UIImage *image = _checked ? [self imageChecked] : [self imageUnchecked];
	if(image)
	{
		CGSize szImage = image.size;
		if(szImage.width/szImage.height >= rcCheck.size.width/rcCheck.size.height)
			rcCheck.size.height = rcCheck.size.width / (szImage.width/szImage.height);
		else
			rcCheck.size.width = rcCheck.size.height * (szImage.width/szImage.height);
		rcCheck.origin.x = CGRectGetMidX(rcBnds) - rcCheck.size.width / 2;
		rcCheck.origin.y = CGRectGetMidY(rcBnds) - rcCheck.size.height / 2;
		//rcCheck = [VLGeometry roundRect:rcCheck];

		[image drawInRect:rcCheck];
	}
}

- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event
{
	[super touchesEnded:touches withEvent:event];
	UITouch *touch = [touches anyObject];
	CGPoint pt = [touch locationInView:self];
	if(CGRectContainsPoint(self.bounds, pt) && self.userInteractionEnabled)
	{
		self.checked = !self.checked;
		[_msgrCheckedChanged postMessage];
	}
}


@end
